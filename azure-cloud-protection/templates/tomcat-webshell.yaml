apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat.example.com
  namespace: default
  labels:
    app.kubernetes.io/created-by: crowdstrike
    app.kubernetes.io/name: tomcat.example.com
    app.kubernetes.io/part-of: crowdstrike-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      run: tomcat.example.com
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/created-by: crowdstrike
        app.kubernetes.io/name: tomcat.example.com
        app.kubernetes.io/part-of: crowdstrike-demo
        run: tomcat.example.com
    spec:
      containers:
      - name: tomcat-webshell
        image: <ACR>./tomcat-webshell
        imagePullPolicy: Always
        command:
        - /opt/tomcat/apache-tomcat-8.0.32/bin/catalina.sh
        args:
        - run
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        resources: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: tomcat-example-com
  namespace: default
  labels:
    app.kubernetes.io/created-by: crowdstrike
    app.kubernetes.io/name: tomcat-example-com
    app.kubernetes.io/part-of: crowdstrike-demo
spec:
  type: LoadBalancer
  selector:
    run: tomcat.example.com
  ports:
  - port: 8082
    targetPort: 8080
    protocol: TCP
    nodePort: 30007
  sessionAffinity: None
  allocateLoadBalancerNodePorts: true
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack